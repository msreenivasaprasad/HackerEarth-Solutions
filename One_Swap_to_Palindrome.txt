import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import javax.xml.stream.events.Characters;

public class One_Swap_to_Palindrome {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int cases = Integer.parseInt(br.readLine());
		for (int i = 0; i < cases; i++) {
			boolean flag = false;
			char[] c = br.readLine().toCharArray();
			List<Integer> noPairIndices = new ArrayList<Integer>();
			List<Character> leftNoMatch = new ArrayList<Character>();
			List<Character> rightNoMatch = new ArrayList<Character>();
			for (int k = 0; k < c.length / 2; k++) {
				if (c[k] != c[c.length - 1 - k]) {
					leftNoMatch.add(c[k]);
					rightNoMatch.add(c[c.length - 1 - k]);
				}
			}
			if (leftNoMatch.size() > 2) {
				System.out.println("No");
				continue;
			}
			Collections.sort(leftNoMatch);
			Collections.sort(rightNoMatch);
//			for (int j = 0; j < leftNoMatch.size(); j++) {
//				System.out.println(leftNoMatch.get(j));
//			}
//			for (int j = 0; j < leftNoMatch.size(); j++) {
//				System.out.println(rightNoMatch.get(j));
//			}
			while (!leftNoMatch.isEmpty()) {
				if (leftNoMatch.get(0) == rightNoMatch.get(0)) {
					leftNoMatch.remove(0);
					rightNoMatch.remove(0);
				} else {
					flag = true;
					break;
				}
			}
			if (flag && leftNoMatch.size() == 2) {
				if (leftNoMatch.get(0) == leftNoMatch.get(1) && rightNoMatch.get(0) == rightNoMatch.get(1)) {
					System.out.println("Yes");
					continue;
				}
			}
			char mid = c[c.length / 2];
			if (flag) {
				if (c.length % 2 != 0 && leftNoMatch.size() == 1
						&& ((leftNoMatch.get(0) == mid) || (rightNoMatch.get(0) == mid))) {
					System.out.println("Yes");
					continue;
				}
				System.out.println("No");
			} else {
				System.out.println("Yes");
			}

		}
	}


}